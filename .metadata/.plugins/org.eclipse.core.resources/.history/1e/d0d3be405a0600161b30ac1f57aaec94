package classtimer.main;

import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerDateModel;

public class GUI 
{
	private JFrame mainFrame;
	private JPanel controlPanel;
	private JLabel timeRemaining;
	private Timer timer;
	private JTextField timeEntry;
	private JButton start, stop, reset, pickSound, testSound;
	boolean running;
	
	public GUI()
	{
		createGUI();
		timer = new Timer(mainFrame);
		running = true;
		update();
	}
	
	private void createGUI()
	{
		mainFrame = new JFrame("Timer Window");
	    mainFrame.setSize(400,400);    
	    mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	    mainFrame.setResizable(true);
	    
	    controlPanel = new JPanel();
	    controlPanel.setLayout(new GridLayout(1, 6));

	    timeRemaining = new JLabel("15:00.000");
	    
	    

	    // Set the timeRemaining's font size to the newly determined size.
	    timeRemaining.setFont(new Font(timeRemainingFont.getName(), Font.PLAIN, fontSizeToUse));
	    
	    mainFrame.add(timeRemaining,BorderLayout.CENTER);
	    mainFrame.add(controlPanel,BorderLayout.SOUTH);
	    mainFrame.setVisible(true); 
	}
	
	private void update()
	{
		while(running)
		{
			timeRemaining.setText(timer.getFormattedTime());
			Font timeRemainingFont = timeRemaining.getFont();
		    String timeRemainingText = timeRemaining.getText();

		    int stringWidth = timeRemaining.getFontMetrics(timeRemainingFont).stringWidth(timeRemainingText);
		    int componentWidth = timeRemaining.getWidth();

		    // Find out how much the font can grow in width.
		    double widthRatio = (double)componentWidth / (double)stringWidth;

		    int newFontSize = (int)(timeRemainingFont.getSize() * widthRatio);
		    int componentHeight = timeRemaining.getHeight();

		    // Pick a new font size so it will not be larger than the height of timeRemaining.
		    int fontSizeToUse = Math.min(newFontSize, componentHeight);
			mainFrame.revalidate();
		}
	}
}
